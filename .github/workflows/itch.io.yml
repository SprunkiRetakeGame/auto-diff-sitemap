name: Sitemap Diff Report

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 00:00 UTC 触发
  workflow_dispatch:  # 允许手动触发

jobs:
  diff_sitemap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          sudo apt-get update
          sudo apt-get install -y jq curl libxml2-utils  # 安装 libxml2-utils 包，包含 xmllint
          echo "Dependencies installed."

      - name: Fetch and parse multiple sitemaps
        run: |
          echo "Downloading sitemaps..."
          # 定义 sitemap 列表
          SITEMAPS=(
            'https://itch.io/games/genre-action.xml'
            'https://itch.io/games/genre-adventure.xml'
            'https://itch.io/games/tag-card-game.xml'
            'https://itch.io/games/tag-educational.xml'
            'https://itch.io/games/tag-fighting.xml'
            'https://itch.io/games/tag-interactive-fiction.xml'
            'https://itch.io/games/genre-platformer.xml'
            'https://itch.io/games/genre-puzzle.xml'
            'https://itch.io/games/tag-racing.xml'
            'https://itch.io/games/tag-rhythm.xml'
            'https://itch.io/games/genre-rpg.xml'
            'https://itch.io/games/genre-shooter.xml'
            'https://itch.io/games/genre-simulation.xml'
            'https://itch.io/games/genre-sports.xml'
            'https://itch.io/games/genre-strategy.xml'
            'https://itch.io/games/tag-survival.xml'
            'https://itch.io/games/genre-visual-novel.xml'
            'https://itch.io/games/genre-other.xml'
          )

          # 用于存储所有 sitemap 中的 plainTitle
          ALL_PLAINTITLES=""

          # 遍历每个 sitemap URL 并拉取数据
          for SITEMAP_URL in "${SITEMAPS[@]}"; do
            echo "Downloading sitemap from $SITEMAP_URL..."
            curl -s "$SITEMAP_URL" -o sitemap.xml

            echo "Extracting plainTitle from $SITEMAP_URL..."
            # 提取 plainTitle 并合并到 ALL_PLAINTITLES 变量中
            PLAINTITLES=$(xmllint --xpath "//item/plainTitle/text()" sitemap.xml)
            ALL_PLAINTITLES="$ALL_PLAINTITLES$PLAINTITLES"$'\n'
          done

          echo "All plainTitles extracted."
          echo "$ALL_PLAINTITLES" | while IFS= read -r title; do
            echo "$title"
          done

          # 检查是否是首次运行（即文件 previous_names.txt 是否存在）
          if [ -f previous_names.txt ]; then
            echo "Previous names file found. Comparing current and previous titles..."
            PREVIOUS_NAMES=$(cat previous_names.txt)

            # 获取新增的游戏名称
            NEW_NAMES=$(comm -13 <(echo "$PREVIOUS_NAMES" | sort) <(echo "$ALL_PLAINTITLES" | sort))

            echo "New Games:"
            echo "$NEW_NAMES"

            # 如果有新增的游戏，生成报告
            if [ ! -z "$NEW_NAMES" ]; then
              DATE=$(date +%Y-%m-%d)
              echo "$NEW_NAMES" > "new_games_$DATE.txt"
              echo "新增游戏已生成报告：new_games_$DATE.txt"
            fi
          else
            # 如果是首次运行，保存当前名称列表到文件
            echo "首次运行，保存所有游戏名称"
            DATE=$(date +%Y-%m-%d)
            echo "$ALL_PLAINTITLES" > "all_games_$DATE.txt"
            echo "已保存所有游戏名称到文件：all_games_$DATE.txt"
          fi

          # 保存当前游戏名称列表供下次比较
          echo "$ALL_PLAINTITLES" > previous_names.txt
          echo "当前游戏名称已保存到 previous_names.txt"

      - name: Commit generated files
        run: |
          echo "Checking if there are new files to commit..."
          # 检查是否有新生成的文件
          if [ -f "new_games_$(date +%Y-%m-%d).txt" ] || [ -f "all_games_$(date +%Y-%m-%d).txt" ]; then
            # 配置 git 用户信息
            echo "Configuring git..."
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"

            # 使用 PAT 进行身份验证
            git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git

            # 添加新生成的文件
            git add *.txt
            echo "Files added to git."

            # 提交到仓库
            git commit -m "Add daily sitemap diff report"
            echo "Commit created."

            # 推送到仓库
            git push origin main
            echo "Changes pushed to the repository."
          else
            echo "No new files to commit."
          fi
